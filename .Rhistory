library(devtools);
path.github = "https://raw.githubusercontent.com/MonteShaffer/humanVerseWSU/master/";
library(devtools);
path.github = "https://raw.githubusercontent.com/MonteShaffer/humanVerseWSU/master/";
source_url ( paste0( path.github, "humanVerseWSU/R/functions-file.R" ) );
# C:\Users\Alexander Nevsky\Dropbox\WSU-419\Fall 2020\__student_access__\_SECRET_\
# paste your file-path above (on Windows)
# highlight, and copy, then run the next line of code in a console.
# path.to.secret = convertDirectoryWin.toR();
# https://stackoverflow.com/questions/64476043/
# https://stackoverflow.com/questions/1189759/
#path.to.secret = "C:/Users/Alexander Nevsky/Dropbox/WSU-419/Fall 2020/__student_access__/_SECRET_/";
path.to.secret = "/Users/jaileefoster/Desktop/stat419/_git_/secret";
measure = utils::read.csv( paste0(path.to.secret, "measure-students.txt"), header=TRUE, quote="", sep="|");
library(devtools);
path.github = "https://raw.githubusercontent.com/MonteShaffer/humanVerseWSU/master/";
library(devtools);
path.github = "https://raw.githubusercontent.com/MonteShaffer/humanVerseWSU/master/";
source_url ( paste0( path.github, "humanVerseWSU/R/functions-file.R" ) );
# C:\Users\Alexander Nevsky\Dropbox\WSU-419\Fall 2020\__student_access__\_SECRET_\
# paste your file-path above (on Windows)
# highlight, and copy, then run the next line of code in a console.
# path.to.secret = convertDirectoryWin.toR();
# https://stackoverflow.com/questions/64476043/
# https://stackoverflow.com/questions/1189759/
#path.to.secret = "C:/Users/Alexander Nevsky/Dropbox/WSU-419/Fall 2020/__student_access__/_SECRET_/";
path.to.secret = "/Users/jaileefoster/Desktop/stat419/_git_/secret/";
measure = utils::read.csv( paste0(path.to.secret, "measure-students.txt"), header=TRUE, quote="", sep="|");
measure;
set.seed(12222015);
measure.example = measure[ sample(1:nrow(measure), 22), ];
measure.example;
measure.example$data_collector = factor(measure.example$data_collector);
measure.example$person_id = factor(measure.example$person_id);
measure.example$writing = factor(tolower(measure.example$writing));
measure.example$eye = factor(tolower(measure.example$eye));
measure.example$`eye_color` = factor(tolower(measure.example$`eye_color`));
measure.example$ethnicity = factor(tolower(measure.example$ethnicity));
measure.example$gender = factor(tolower(measure.example$gender));
measure.example$gender[measure.example$gender=="f"] = "female";
measure.example$gender[measure.example$gender=="m"] = "male";
measure.example$swinging = factor(tolower(measure.example$swinging));
measure.example$side = factor(tolower(measure.example$side));
measure.example$units = factor(tolower(measure.example$units));
measure.example$units[measure.example$units=="inches"] = "in";
# remember conv_units ...
summary(measure.example);
another.example = measure.example[, 4:8];
colnames(another.example) = c("height", "headH", "headC", "handL.l", "handL.r");
my.M = colMeans(another.example);
# my.SD =  ??? how are you going to get this data?
my.SD = abs( rnorm(ncol(another.example), mean=13, sd = 1) );  # this is intentionally not correct ... you have to cumpute the correct SD ...
library(Hmisc);
my.corr = rcorr( as.matrix(another.example), type="pearson");
str(my.corr);
my.corr.r = my.corr$r;
my.corr.pval = my.corr$P;
# we have long variable names, we may want to create a dictionary that shortens them, and build an appendix table that is a glossary or a lookup.
# the appendix should have the handout, the data collection process outlined, the data provenance protocol especially as it relates to SECRET, and an identification of the sample type and its potential weaknesses.
my.corr.r.2 = round(my.corr.r,2);
my.corr.p.3 = as.numeric( round(my.corr.pval,3) ); # flatten
cuts = c(0.10, 0.05, 0.01, 0.001);
symb = c("+", "*", "**", "***");
my.corr.p.3.symb = "";
my.corr.p.3.symb[is.na(my.corr.p.3)] = "";
my.corr.p.3.symb[my.corr.p.3 <= 0.10] = "+";
my.corr.p.3.symb[my.corr.p.3 <= 0.05] = "*";
my.corr.p.3.symb[my.corr.p.3 <= 0.01] = "**";
my.corr.p.3.symb[my.corr.p.3 <= 0.001] = "***";
my.corr.p.3.symb;
include.diag = FALSE;  # the 1's on the diagonal are not included
# this is a lower triangular form ...
char.matrix = as.character(my.corr.r.2);
my.matrix = matrix(
paste0(char.matrix, my.corr.p.3.symb),
nrow=ncol(another.example));
my.matrix;
# TODO:  I (instructor) will write a function that takes this string and builds and stores as a Latex file ... for the final report ...
library(functions-corr)
library("functions-corr")
source("/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/functions/function-corr.R")
knitr::opts_chunk$set(echo = TRUE)
source("/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/functions/")
local.path = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/";
source(paste0(local.path, "functions/function-corr.R"), local=T)
local.path = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/";
source(paste0(local.path, "functions/libraries.R"), local=T)
source(paste0(local.path, "functions/functions-corr.R"), local=T)
View(measure)
measure.df = read.csv( paste0(path.to.secret, "final.measure.txt"), header=TRUE,
quote="", sep="|");
path.to.secret = "/Users/jaileefoster/Desktop/stat419/_git_/secret/";
measure.df = read.csv( paste0(path.to.secret, "final.measure.txt"), header=TRUE,
quote="", sep="|");
View(measure.df)
path.to.secret = "/Users/jaileefoster/Desktop/stat419/_git_/secret/";
measure.df = read.csv( paste0(path.to.secret, "final.measure.txt"), header=TRUE,
quote="", sep="|");
measure.df2 = read.csv( paste0(path.to.secret, "cm.final.measure.txt"), header=TRUE,
quote="", sep="|");
View(measure.df2)
View(measure.df)
measure.naomit = na.omit(measure.df)
View(measure.naomit)
View(measure.df)
measure.no.notes = measure.df[0:17, 18:]
measure.no.notes = subsetDataFrame(measure.df, mycols = [0:17, 18:])
measure.no.notes = subsetDataFrame(measure.df, mycols = c(0:17, 18:))
measure.no.notes = subsetDataFrame(measure.df, mycols = c(0:17, 18:20))
measure.no.notes = subsetDataFrame(measure.df, mycols = c("data_collector"))
measure.no.notes = subsetDataFrame(measure.df, mycols = "data_collector")
measure.no.notes <- subset( measure.df, select = -'notes' )
c = 'notes'
measure.no.notes <- subset( measure.df, select = -c )
measure.no.notes <- subset( measure.df, select = -notes )
View(measure.no.notes)
measure.no.notes.omit = na.omit(measure.no.notes)
findOutliersUsingIQR(measure.no.notes.omit, innerFenceFactor = 1.5, outerFenceFactor = 3)
findOutliersUsingIQR(measure.no.notes.omit$height, innerFenceFactor = 1.5, outerFenceFactor = 3)
findOutliersUsingIQR(measure.no.notes.omit$head.height, innerFenceFactor = 1.5, outerFenceFactor = 3)
findOutliersUsingIQR(measure.no.notes.omit$head.circumference, innerFenceFactor = 1.5, outerFenceFactor = 3)
findOutliersUsingIQR(measure.no.notes.omit$head.height, innerFenceFactor = 1.5, outerFenceFactor = 3)
View(measure.df)
local.path = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/";
source(paste0(local.path, "functions/functions-corr.R"), local=T)
path.project = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/
project-measure/";
path.tables = paste0(path.project, "tables/")
createDirRecursive(path.tables)
file.correltaion = paste0(path.tables,'measure-table.tex')
myData = as.matrix(measure.no.notes.omit[,c('height', 'head.height')])
local.path = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/";
source(paste0(local.path, "functions/functions-corr.R"), local=T)
path.project = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/
project-measure/";
path.tables = paste0(path.project, "tables/")
createDirRecursive(path.tables)
file.correltaion = paste0(path.tables,'measure-table.tex')
myData = as.matrix(measure.no.notes.omit[,c('height', 'head.height')])
buildLatexCorrelationTable(myData, rotateTable = FALSE, width.table = 0.95, myFile = file.correltaion, myNames = c("Height", "Head Height"), myCaption = "Height, HeadHeight")
getwd()
setwd("~/Desktop/stat419/_git_/WSU_STATS419_FALL2020")
local.path = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/";
source(paste0(local.path, "functions/functions-corr.R"), local=T)
path.project = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/
project-measure/";
path.tables = paste0(path.project, "tables/")
createDirRecursive(path.tables)
file.correltaion = paste0(path.tables,'measure-table.tex')
myData = as.matrix(measure.no.notes.omit[,c('height', 'head.height')])
buildLatexCorrelationTable(myData, rotateTable = FALSE, width.table = 0.95, myFile = file.correltaion, myNames = c("Height", "Head Height"), myCaption = "Height, HeadHeight")
local.path = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/";
source(paste0(local.path, "functions/functions-corr.R"), local=T)
path.project = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/
project-measure/";
path.tables = '/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/project-measure/tables'
createDirRecursive(path.tables)
file.correltaion = paste0(path.tables,'measure-table.tex')
myData = as.matrix(measure.no.notes.omit[,c('height', 'head.height')])
buildLatexCorrelationTable(myData, rotateTable = FALSE, width.table = 0.95, myFile = file.correltaion, myNames = c("Height", "Head Height"), myCaption = "Height, HeadHeight")
local.path = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/";
source(paste0(local.path, "functions/functions-corr.R"), local=T)
path.project = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/
project-measure/";
path.tables = '/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/project-measure/tables/'
createDirRecursive(path.tables)
file.correltaion = paste0(path.tables,'measure-table.tex')
myData = as.matrix(measure.no.notes.omit[,c('height', 'head.height')])
buildLatexCorrelationTable(myData, rotateTable = FALSE, width.table = 0.95, myFile = file.correltaion, myNames = c("Height", "Head Height"), myCaption = "Height, HeadHeight")
?buildLatexCorrelationTable
View(buildLatexCorrelationTable)
View(buildLatexCorrelationTable)
buildLatexCorrelationTable(myData, myFile = file.correlation)
local.path = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/";
source(paste0(local.path, "functions/functions-corr.R"), local=T)
path.project = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/
project-measure/";
path.tables = '/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/project-measure/tables/'
createDirRecursive(path.tables)
file.correlation = paste0(path.tables,'measure-table.tex')
myData = as.matrix(measure.no.notes.omit[,c('height', 'head.height')])
buildLatexCorrelationTable(myData, myFile = file.correlation)
#buildLatexCorrelationTable(myData, rotateTable = FALSE, width.table = 0.95, myFile = file.correltaion, myNames = c("Height", "Head Height"), myCaption = "Height, HeadHeight")
View(buildLatexCorrelationTable)
library(humanVerseWSU)
library(devtools)
# Source functions
path.humanVerseWSU = "https://raw.githubusercontent.com/MonteShaffer/humanVerseWSU/"
source_url(paste0(path.humanVerseWSU,"master/misc/functions-project-measure.R"))
# Set table directory
path.project = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/
project-measure/";
path.tables = paste0(path.project,"tables/")
createDirRecursive(path.tables)
# Create male table
file.correlation = paste0(path.tables,"measure-table-m.tex")
myData = as.matrix(measure.df.m[,c("height.NA","head.height.NA","arm.span.NA")])
library(humanVerseWSU)
library(devtools)
# Source functions
path.humanVerseWSU = "https://raw.githubusercontent.com/MonteShaffer/humanVerseWSU/"
source_url(paste0(path.humanVerseWSU,"master/misc/functions-project-measure.R"))
# Set table directory
path.project = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/
project-measure/";
path.tables = paste0(path.project,"tables/")
createDirRecursive(path.tables)
# Create male table
file.correlation = paste0(path.tables,"measure-table-m.tex")
myData = as.matrix(measure.no.notes.omit[,c("height.NA","head.height.NA","arm.span.NA")])
View(measure.no.notes.omit)
library(humanVerseWSU)
library(devtools)
# Source functions
path.humanVerseWSU = "https://raw.githubusercontent.com/MonteShaffer/humanVerseWSU/"
source_url(paste0(path.humanVerseWSU,"master/misc/functions-project-measure.R"))
# Set table directory
path.project = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/
project-measure/";
path.tables = paste0(path.project,"tables/")
createDirRecursive(path.tables)
# Create male table
file.correlation = paste0(path.tables,"measure-table-m.tex")
myData = as.matrix(measure.no.notes.omit[,c("height","head.height","arm.span")])
buildLatexCorrelationTable(myData, rotateTable = FALSE, width.table = 0.95, # 0.95 when rotateTable is FALSE, 0.60 when TRUE
myFile = file.correlation, myNames = c("Height (in)", "Head Height (in)", "Arm Span (in)"), myCaption = "Descriptive Statistics and Correlation Analysis for Males")
Sys.sleep(2) # Error checking when knitting-to-pdf
\newpage
library(humanVerseWSU)
library(devtools)
# Source functions
path.humanVerseWSU = "https://raw.githubusercontent.com/MonteShaffer/humanVerseWSU/"
source_url(paste0(path.humanVerseWSU,"master/misc/functions-project-measure.R"))
# Set table directory
path.project = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/
project-measure/";
path.tables = '/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/project-measure/tables/'
createDirRecursive(path.tables)
# Create male table
file.correlation = paste0(path.tables,"measure-table-m.tex")
myData = as.matrix(measure.no.notes.omit[,c("height","head.height","arm.span")])
buildLatexCorrelationTable(myData, rotateTable = FALSE, width.table = 0.95, # 0.95 when rotateTable is FALSE, 0.60 when TRUE
myFile = file.correlation, myNames = c("Height (in)", "Head Height (in)", "Arm Span (in)"), myCaption = "Descriptive Statistics and Correlation Analysis for Males")
Sys.sleep(2) # Error checking when knitting-to-pdf
\newpage
library(humanVerseWSU)
library(devtools)
# Source functions
path.humanVerseWSU = "https://raw.githubusercontent.com/MonteShaffer/humanVerseWSU/"
source_url(paste0(path.humanVerseWSU,"master/misc/functions-project-measure.R"))
# Set table directory
path.project = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/
project-measure/";
path.tables = '/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/project-measure/tables/'
createDirRecursive(path.tables)
# Create male table
file.correlation = paste0(path.tables,"measure-table-m.tex")
myData = as.matrix(measure.no.notes.omit[,c("height","head.height","arm.span")])
buildLatexCorrelationTable(myData, rotateTable = FALSE, width.table = 0.95, # 0.95 when rotateTable is FALSE, 0.60 when TRUE
myFile = file.correlation, myNames = c("Height (in)", "Head Height (in)", "Arm Span (in)"), myCaption = "Descriptive Statistics and Correlation Analysis for Males")
Sys.sleep(2) # Error checking when knitting-to-pdf
# \newpage
#
# \subsubsection{Tables of Descriptive Statistics and Correlations}
# \label{sec:correlation-tables}
# \input{tables/measure-table-m}
library(humanVerseWSU)
library(devtools)
# Source functions
path.humanVerseWSU = "https://raw.githubusercontent.com/MonteShaffer/humanVerseWSU/"
source_url(paste0(path.humanVerseWSU,"master/misc/functions-project-measure.R"))
# Set table directory
path.project = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/
project-measure/";
path.tables = '/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/project-measure/tables/'
createDirRecursive(path.tables)
# Create male table
file.correlation = paste0(path.tables,"measure-table-m.tex")
myData = as.matrix(measure.no.notes.omit[,c("height","head.height","arm.span")])
buildLatexCorrelationTable(myData, rotateTable = TRUE, width.table = 0.6, # 0.95 when rotateTable is FALSE, 0.60 when TRUE
myFile = file.correlation, myNames = c("Height (in)", "Head Height (in)", "Arm Span (in)"), myCaption = "Descriptive Statistics and Correlation Analysis for Males")
Sys.sleep(2) # Error checking when knitting-to-pdf
# \newpage
#
# \subsubsection{Tables of Descriptive Statistics and Correlations}
# \label{sec:correlation-tables}
# \input{tables/measure-table-m}
local.path = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/";
source(paste0(local.path, "functions/functions-corr.R"), local=T)
path.project = "/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/
project-measure/";
path.tables = '/Users/jaileefoster/Desktop/stat419/_git_/WSU_STATS419_FALL2020/project-measure/tables/'
createDirRecursive(path.tables)
file.correlation = paste0(path.tables,'measure-table2.tex')
myData = as.matrix(measure.no.notes.omit[,c('height', 'head.height')])
buildLatexCorrelationTable(myData, myFile = file.correlation, rotateTable = TRUE, width.table = 0.95)
#buildLatexCorrelationTable(myData, rotateTable = FALSE, width.table = 0.95, myFile = file.correltaion, myNames = c("Height", "Head Height"), myCaption = "Height, HeadHeight")
